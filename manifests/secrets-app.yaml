apiVersion: v1
kind: Secret
metadata:
  name: vault-credentials
  namespace: default
type: Opaque
stringData:
  api-key: "initial-api-key-value"
  password: "initial-password-value"
---
apiVersion: v1
kind: Secret
metadata:
  name: kms-credentials
  namespace: default
type: Opaque
stringData:
  kms-key-id: "initial-kms-key-id"
  encryption-context: "initial-encryption-context"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: secrets-app
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: resilient-app
      secrets: "true"
  template:
    metadata:
      labels:
        app: resilient-app
        secrets: "true"
      annotations:
        vault.hashicorp.com/secret-volume: "vault-credentials"
        aws-kms/key-id: "initial-kms-key-id"
    spec:
      containers:
      - name: secrets-app
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: vault-secrets
          mountPath: "/vault/secrets"
          readOnly: true
        - name: kms-secrets
          mountPath: "/kms/secrets"
          readOnly: true
        env:
        - name: VAULT_SECRET_PATH
          value: "/vault/secrets"
        - name: KMS_SECRET_PATH
          value: "/kms/secrets"
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "echo 'Secret rotation handler initialized' > /tmp/secret-handler.log"]
      volumes:
      - name: vault-secrets
        secret:
          secretName: vault-credentials
      - name: kms-secrets
        secret:
          secretName: kms-credentials
---
apiVersion: v1
kind: Service
metadata:
  name: secrets-app
  namespace: default
spec:
  selector:
    app: resilient-app
    secrets: "true"
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP 